CFLAGS=-Wall -g -std=c++11 -O3 -flto -fuse-linker-plugin -fopenmp #-D_GLIBCXX_DEBUG -fsanitize=undefined
LDFLAGS=-lm

# Autogenerated dirs
DIRS=obj bin .deps

# Find all dependencies of the 
OBJS_COMMON=$(patsubst src/%.cpp,obj/%.o,$(shell find src/common/ -name *.cpp))

# Benchmarks
BENCHMARKS=$(wildcard benchmarks/*.csv)

.PHONY: clean test

test: bin/bench
	@for b in benchmarks/*.csv; do\
		echo "\n\033[1m----- Running bechmark $$b -----\033[0m"; \
		./bin/bench -b $$b -a naive -a parallel -a rtree;\
	done;


# Compiles objects and generates dependencies
obj/%.o: src/%.cpp | obj .deps
	@mkdir -p $(@D)
	g++ $(CFLAGS) -MM -MP -MT $@ $< > .deps/$(subst /,__,$*).d
	g++ -c $< $(CPPFLAGS) $(CFLAGS) -o $@

# Remove bulid files
clean:
	rm -r $(DIRS)

# Creates missing folders
$(DIRS):
	mkdir -p $@

# Dependencies are made during compilation - don't try to make them
.deps/%.d:;

# Include dependencies
-include .deps/*.d

# Main programs with dependencies
pc:=%
.SECONDEXPANSION:
bin/%: $$(patsubst src/$$(pc).cpp,obj/$$(pc).o,$$(wildcard src/$$*/*.cpp)) $(OBJS_COMMON)  | bin
	g++ $^ $(CFLAGS) $(LDFLAGS) -o $@
