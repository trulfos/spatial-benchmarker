COMMON_CFLAGS=-Wall -g -std=c++11 -fopenmp -Isrc/ -march=native

ifdef DEBUG
	CFLAGS=$(COMMON_CFLAGS) -D_GLIBCXX_DEBUG
else
	CFLAGS=$(COMMON_CFLAGS) -O3 -flto -fuse-linker-plugin -fopenmp -DNDEBUG# -fopt-info-optimized=optimizations.log
endif


LDFLAGS=-lm

# Autogenerated dirs
DIRS=obj bin .deps test

# Find all dependencies
OBJS_COMMON=$(patsubst src/%.cpp,obj/%.o,$(filter-out %.test.cpp,$(wildcard src/common/*.cpp)))

# Find tests
TESTS=$(patsubst src/%.test.cpp,test/%,$(shell find src/ -name *.test.cpp))
ifdef VIM # Make quickfix in vim work
	TEST_SUFFIX=--ascii 2>&1 | sed 's/^\[-\+\] //'
endif

.PHONY: clean run check

run: bin/bench;

check: $(TESTS)
	@for t in $(TESTS); do\
		./$$t $(TEST_SUFFIX);\
	done;

# Compiles objects and generates dependencies
obj/%.o: src/%.cpp | obj .deps
	@mkdir -p $(@D)
	g++ $(CFLAGS) -MM -MP -MT $@ $< > .deps/$(subst /,__,$*).d
	g++ -c $< $(CPPFLAGS) $(CFLAGS) -o $@

test/%: src/%.test.cpp | test .deps
	@if [ -z "$$DEBUG" ]; then\
		echo -e "\033[41mWARNING: Enable debug while testing!\033[0m";\
	fi;
	@mkdir -p $(@D)
	g++ $(CFLAGS) -MM -MP -MT $@ $< > .deps/$(subst /,__,$*).test.d
	g++ $(CPPFLAGS) $(COMMON_CFLAGS) -lcriterion -o $@ $<

# Remove bulid files
clean:
	rm -rf $(DIRS)

# Creates missing folders
$(DIRS):
	mkdir -p $@

# Dependencies are made during compilation - don't try to make them
.deps/%.d:;

# Include dependencies
-include .deps/*.d

# Main programs with dependencies
pc:=%
.SECONDEXPANSION:
bin/%: $$(patsubst src/$$(pc).cpp,obj/$$(pc).o,$$(filter-out $$(pc).test.cpp,$$(shell find src/$$*/ -name *.cpp))) $(OBJS_COMMON)  | bin
	g++ $^ $(CFLAGS) $(LDFLAGS) -o $@
